[{"/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/index.js":"1","/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/serviceWorker.js":"2","/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/App.js":"3","/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/userHomepage.js":"4","/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/Footer.js":"5","/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/NavBar.js":"6","/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/welcome.js":"7","/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/Forms/loginUser.js":"8","/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/Forms/createUser.js":"9","/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/Forms/addInfo.js":"10","/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/Forms/createTask.js":"11","/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/Persons/Person/person.js":"12","/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/Persons/persons.js":"13","/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/UI/Input/input.js":"14","/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/Tasks/tasks.js":"15","/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/Requests/requests.js":"16","/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/Requests/Request/request.js":"17","/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/Tasks/Task/task.js":"18","/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/Modals/paymentmodal.js":"19","/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/Modals/updatemodal.js":"20"},{"size":452,"mtime":1578850544000,"results":"21","hashOfConfig":"22"},{"size":5003,"mtime":1578850544000,"results":"23","hashOfConfig":"22"},{"size":2346,"mtime":1580342522000,"results":"24","hashOfConfig":"22"},{"size":3265,"mtime":1581184826000,"results":"25","hashOfConfig":"22"},{"size":863,"mtime":1580340138000,"results":"26","hashOfConfig":"22"},{"size":1082,"mtime":1581183072000,"results":"27","hashOfConfig":"22"},{"size":435,"mtime":1579833418000,"results":"28","hashOfConfig":"22"},{"size":2907,"mtime":1580325700000,"results":"29","hashOfConfig":"22"},{"size":7688,"mtime":1597282550000,"results":"30","hashOfConfig":"22"},{"size":7250,"mtime":1580345152000,"results":"31","hashOfConfig":"22"},{"size":6984,"mtime":1597283580000,"results":"32","hashOfConfig":"22"},{"size":961,"mtime":1630560120082,"results":"33","hashOfConfig":"22"},{"size":349,"mtime":1580079738000,"results":"34","hashOfConfig":"22"},{"size":1908,"mtime":1630560858480,"results":"35","hashOfConfig":"22"},{"size":480,"mtime":1581184722000,"results":"36","hashOfConfig":"22"},{"size":568,"mtime":1581185542000,"results":"37","hashOfConfig":"22"},{"size":3514,"mtime":1630560894748,"results":"38","hashOfConfig":"22"},{"size":3343,"mtime":1630560868605,"results":"39","hashOfConfig":"22"},{"size":3584,"mtime":1581186292000,"results":"40","hashOfConfig":"22"},{"size":3945,"mtime":1580238428000,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9b5ugq",{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},"/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/index.js",[],"/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/serviceWorker.js",[],"/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/App.js",["94"],"import React, {Component} from 'react';\nimport axios from 'axios';\nimport Footer from './components/Footer'\nimport './App.css';\nimport SearchField from \"react-search-field\";\nimport CreateForm from './components/Forms/createUser'\nimport TaskForm from './components/Forms/createTask'\nimport AddInfo from './components/Forms/addInfo'\nimport UserHomepage from './components/userHomepage'\nimport Person from './components/Persons/Person/person'\nimport Persons from './components/Persons/persons'\nimport LoginForm from './components/Forms/loginUser'\nimport NavBar from './components/NavBar'\nimport WelcomeMessage from './components/welcome'\nimport {Button} from 'react-bootstrap'\nimport {BrowserRouter, Route} from 'react-router-dom';\n\n\nclass App extends Component {\n  state = {\n    persons: [],\n    otherState: \"SomeOtherValue\",\n    showPersons: false\n  }\n  \n  componentDidMount(){\n    axios.get('http://localhost:3000/users/all').then(response =>{\n       this.setState({persons:response.data})\n       console.log(this.state.persons);\n    });\n  \n  }\n \n  togglePersonHandler = () =>{\n    const doesShow = this.state.showPersons;\n    this.setState({showPersons: !doesShow});\n   }\n\n  render(){\n    const style = {\n      \"display\" : \"flex\",\n      \"flexWrap\" : \"wrap\",\n    }\n    let persons = null\n    if(this.state.showPersons){\n    persons =( <div style={style}> \n       \n        \n        <Persons \n        persons = {this.state.persons}\n         />\n\n    </div>\n    )\n      }\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n    <NavBar />\n      <header className=\"App-header\">\n       \n      <Route path=\"/\" exact render={(props) =>\n        <div>\n          \n          <WelcomeMessage/>\n          <Button onClick={this.togglePersonHandler}> See Service Providers and Consumers ({this.state.persons.length} users)</Button>\n          {' '}{' '}<SearchField\n  placeholder=\"Search...\"\n  \n  \n/>\n          <br></br>\n          {persons}\n        </div>\n      } />\n      <Route path=\"/create\" exact component={CreateForm} />\n      <Route path=\"/connect\" exact component={TaskForm} />\n      <Route path=\"/login\" exact component={LoginForm} />\n      <Route path=\"/homepage\" exact component={UserHomepage} />\n      <Route path=\"/info\" exact component={AddInfo} />\n      </header>\n    </div>\n\n    < Footer />\n    </BrowserRouter>\n  );\n}\n}\n\nexport default App;\n","/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/userHomepage.js",[],"/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/Footer.js",["95","96","97"],"import React from 'react';\nimport { FaFacebook, FaInstagram} from \"react-icons/fa\"\n\nconst theFooter = (props) =>{\nreturn (\n    <footer className=\"footer\">\n      <hr></hr>\n    <div className=\"row welcome text-center\">\n  <div className=\"col-12\">\n      <h1 className=\"display-7\">Contact Us</h1>\n  </div>\n\n<div className=\"col-md-6 col-xs-12 col-sm-6\">\n <br></br>\n<p> P.O Box 3565-00100, Nairobi, Kenya</p>\n<p>Flamingo Towers, 4th Floor Wing A, Mara Road, Upper Hill</p>\n<p>Call us at <a href=\"#\">+254123456789</a></p>\n<p>Email us at <a href=\"mailto:info@premiercamelmilk.com\">info@eService.com</a> </p>\n</div>\n<div className=\"col-md-6 col-xs-12 col-sm-6\">\n  <br></br>\n<p>Find Us On</p>\n<a href=\"#\"><FaInstagram size=\"40px\" color=\"black\"/></a>\n<a href=\"#\"><FaFacebook size=\"40px\" color=\"black\"/></a>\n</div>\n</div>\n      \n    </footer>\n);\n\n\n}\n\nexport default theFooter;","/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/NavBar.js",["98","99","100"],"import React from 'react';\nimport './nav.css'\nimport { FaTools,} from \"react-icons/fa\"\n\nimport {Link} from 'react-router-dom';\nimport { Navbar,  NavDropdown, Nav, } from 'react-bootstrap';\nconst navStyle = {\n    \"paddingRight\": \"45px\"\n  }  \n  const titleStyle = {\n    \"fontFamily\" : \"Quicksand\",\n    \"fontWeight\": \"\",\n    \"paddingTop\": \"5px\",\n    \"fontColor\" : \"grey\"\n  }\n  const navbarStyle = {\n    \"padding\" : \"20px\"\n  }\n\nconst theNavbar = (props) =>{\n    return (<div>\n    <Navbar bg=\"white\" expand=\"lg\">\n    <Navbar.Brand href=\"#home\"> <FaTools/>  eService</Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    <Navbar.Collapse id=\"basic-navbar-nav\">\n      <Nav className=\"ml-auto\" style ={navStyle} >\n    <Nav.Link href=\"/\"> &nbsp;  Home</Nav.Link> \n        <Nav.Link>&nbsp;Operations</Nav.Link>\n        <NavDropdown title=\"More Services\" id=\"basic-nav-dropdown\" >\n          <NavDropdown.Item href=\"#action/3.2\">Product 1</NavDropdown.Item>\n        </NavDropdown>\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar>\n  </div>\n    );\n\n}\n\nexport default theNavbar;","/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/welcome.js",["101"],"import React from 'react';\nimport styled from 'styled-components'\nimport {Button} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\n\nconst welcomeMessage = (props) =>{\nreturn(\n    <div>\n<h1>Welcome to eService</h1>\n<h2>The best place to find or provide a service</h2>\n<Link to=\"/login\"><Button>Login</Button></Link> {' '}{' '}\n\n<Link to=\"/create\"><Button>Register</Button></Link>\n</div>\n);\n\n}\n\nexport default welcomeMessage;","/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/Forms/loginUser.js",["102","103"],"import React, {Component} from 'react';\nimport axios from 'axios';\n// import './Person.css';\nimport './formClasses.css'\nimport styled from 'styled-components'\nimport Input from '../UI/Input/input.js';\nimport {Form , Button} from 'react-bootstrap'\nclass LoginForm extends Component{\n  state = {\n    loginForm:{\n      email: {\n        elementType: \"input\",\n        elementConfig:{\n          type:'email',\n          placeholder:'example@email.com',\n          id:\"email\"\n        },\n        value: '',\n        label: 'Email'\n\n      },\n      password: {\n        elementType: \"input\",\n        elementConfig:{\n        type:'password',\n        placeholder:\"password\",\n        id:\"password\"\n        },\n      value: '',\n      label: 'Password'\n      },\n      \n    },\n    validLogin:true,\n\n  }\n  inputChangedHandler = (event, inputIdentifier) =>{\n    const updatedCreateForm = {\n      ...this.state.loginForm\n    };\n    const updatedFormElement = {\n      ...updatedCreateForm[inputIdentifier]\n    };\n    updatedFormElement.value = event.target.value\n    updatedCreateForm[inputIdentifier] = updatedFormElement\n    this.setState({loginForm: updatedCreateForm});\n   }\n   \n  onSubmit = (props) =>{ \n    props.preventDefault();\n    \n    const email = this.state.loginForm.email.value;\n    const password = this.state.loginForm.password.value;\n    console.log(email);\n    const data = {\n      email,\n      password\n    }\n    axios.post('http://localhost:3000/users/login', data)\n    .then((response) => {\n      console.log(response.data);\n      const token = \"Bearer \" + response.data.token\n      localStorage.setItem('thisToken', token)\n      console.log(token)\n      window.location.replace(\"/homepage\")\n    })\n    .catch( (error) => {\n      console.log(error.message);\n      this.setState({validLogin: false})\n      \n    });\n   \n    \n}\n\nrender (){\n  let invalidLogin = null;\n  if(!this.state.validLogin){\n    invalidLogin = (\n      <p className=\"invalidLogin\">Invalid Username/Password</p>\n    )\n  }\n  \n  const formElementsArray = [];\n    for(let key in this.state.loginForm){\n      formElementsArray.push({\n        id: key,\n        config:this.state.loginForm[key]\n      })\n\n    }\n    return (\n\n     <div className=\"login\">\n    \n         <h1>Login</h1>\n     <form  id='myForm'\n            className=\"form\"\n              >\n    {formElementsArray.map(formElement =>(\n       <Input\n            key={formElement.id}\n            elementType = {formElement.config.elementType}\n            elementConfig = {formElement.config.elementConfig}\n            value = {formElement.config.value}\n            label = {formElement.config.label}\n            changed = {(event) => this.inputChangedHandler(event, formElement.id )}\n       />\n     ))}\n     {invalidLogin}\n     <Button variant=\"primary\" type=\"submit\" onClick={this.onSubmit}>\n       Submit\n     </Button>\n     \n   </form>\n   </div>\n    );\n    }\n}\n \n export default LoginForm;","/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/Forms/createUser.js",["104","105","106"],"import React, {Component, isValidElement} from 'react';\nimport axios from 'axios';\nimport validator from 'validator';\nimport styled from 'styled-components'\nimport Input from '../UI/Input/input.js';\nimport {Form , Button} from 'react-bootstrap'\nimport {Link, Redirect} from 'react-router-dom'\n\nclass CreateForm extends Component{\n  state = {\n    createForm:{\n      name:{\n        elementType: \"input\",\n        elementConfig:{\n          type:'text',\n          placeholder:'Your Name',\n          id:\"name\"\n        },\n        value: '',\n        label: 'Name',\n        validation: {\n           required:true,\n           \n        },\n        valid:false,\n        touched: false\n\n      },\n      email: {\n        elementType: \"input\",\n        elementConfig:{\n          type:'email',\n          placeholder:'example@email.com',\n          id:\"email\"\n        },\n        value: '',\n        label: 'Email',\n        validation: {\n          required:true,\n          isEmail: true,\n          \n       },\n       valid:false,\n       errors:[]\n       \n\n      },\n      userType: {\n        elementType: \"select\",\n        elementConfig:{\n          options: [\n            {value:'', displayValue:''},\n            {value:'Service Provider', displayValue:'Service Provider'},\n            {value:'Employer', displayValue:'Employer'},\n            {value:'HR Manager', displayValue:'Human Resource Manager'}\n          ],\n          placeholder:'Your Name',\n          id:\"userType\",\n          \n        },\n        validation: {\n          required:true,\n          \n       },\n       valid:false,\n        value:'',\n        label: 'User Type',\n        touched: false,\n        errors:[]\n\n      },\n      occupation: {\n        elementType: \"select\",\n        elementConfig:{\n          options: [\n            {value:'', displayValue:''},\n            {value:'Mechanic', displayValue:'Mechanic'},\n            {value:'Carpenter', displayValue:'Carpenter'},\n            {value:'Electrician', displayValue:'Electrician'},\n            {value:'BlackSmith', displayValue:'BlackSmith'},\n            {value:'Lawyer', displayValue:'Lawyer'},\n            {value:'Driver', displayValue:'Driver'},\n            {value:'Self-Employed', displayValue:'Self-Employed'},\n            {value:'Private Sector Worker', displayValue:'Private Sector Worker'},\n            {value:'Government Official/Company', displayValue:'Government Official/Company'}\n          ],\n          \n          id:\"occupation\",\n          \n        },\n        validation: {\n          required:true,\n          \n       },\n       valid:false,\n        value:'',\n        label: 'Occupation',\n        touched: false,\n        errors:[]\n        },\n      birthdate: {\n          elementType: \"input\",\n          elementConfig:{\n          type:'date',\n          id:\"date\"\n        },\n        value: '',\n        label: 'BirthDate',\n        validation: {\n          required:true,\n          \n       },\n       valid:false,\n       touched: false,\n       errors:[]\n      },\n      password: {\n        elementType: \"input\",\n        elementConfig:{\n        type:'password',\n        placeholder:\"password\",\n        id:\"password\"\n        },\n      value: '',\n      label: 'Password',\n      validation: {\n        required:true,\n        minLength:8,\n\n        \n     },\n     valid:false,\n     touched: false,\n     errors:[]\n      },\n      comfirmpassword: {\n        elementType: \"input\",\n        elementConfig:{\n        type:'password',\n        placeholder:\"confirm password\"\n        },\n      value: '',\n      label: 'Confirm Password',\n      validation: {\n        required:true,\n        confirmPassword: true,\n        \n     },\n     valid:false,\n     touched: false,\n     errors:[]\n      },\n\n    },\n    formisValid: false,\n    loggedIn : false\n\n  }\n  checkValidity(value, rules, element){\n    let isValid = true;\n    if(rules.required){\n      isValid = value.trim() !=='' && isValid;\n      if(!isValid){\n      element.errors.push(\"This field must not be empty\")\n      }\n  }\n  if(rules.minLength){\n    const minChar = rules.minLength\n    isValid = value.length >= rules.minLength && isValid;\n    const errorMessage = \"Input must be \" + minChar + \" characters long\"\n    if(!isValid && value.trim()!== ''){\n      element.errors.push(errorMessage)\n      }\n  }\n  if(rules.isEmail){\n    isValid = validator.isEmail(value)  && isValid ;\n    if(!isValid && value.trim()!== ''){\n      element.errors.push(\"Must be a Valid Email\")\n      }\n}\n    if(rules.confirmPassword){\n      isValid = value === this.state.createForm.password.value && isValid\n      if(!isValid && value.trim()!== ''){\n      element.errors.push(\"Passwords Must Match\")\n      }\n    }\n\n    return isValid\n  }\n  inputChangedHandler = (event, inputIdentifier) =>{\n   const updatedCreateForm = {\n     ...this.state.createForm\n   };\n   const updatedFormElement = {\n     ...updatedCreateForm[inputIdentifier]\n   };\n   updatedFormElement.errors = []\n   updatedFormElement.value = event.target.value\n   updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation, updatedFormElement)\n   updatedFormElement.touched = true\n   console.log(updatedFormElement)\n   updatedCreateForm[inputIdentifier] = updatedFormElement\n   let formisValid = true; \n   for(let inputIdentifier in updatedCreateForm){\n     formisValid = updatedCreateForm[inputIdentifier].valid && formisValid\n   }\n   this.setState({createForm: updatedCreateForm, formisValid });\n  }\n\n  onSubmit = (props) =>{ \n    let todayDate = Date.now();\n    let newDate = new Date(this.state.createForm.birthdate.value);\n    props.preventDefault();\n    \n    const name = this.state.createForm.name.value;\n    const userType = this.state.createForm.userType.value;\n    const occupation = this.state.createForm.occupation.value;\n    const age = Math.floor((todayDate - newDate)/(1000*3600*24*365));\n    const email = this.state.createForm.email.value;\n    const password = this.state.createForm.password.value;\n    console.log(age);\n    const data = {\n      name,\n      occupation,\n      userType,\n      age,\n      email,\n      password\n    }\n    console.log(data)\n    axios.post('http://localhost:3000/users', data)\n    .then( (response) => {\n      console.log(response.data);\n      this.setState({loggedIn: true});\n    })\n    .catch((error) => {\n      console.log(error);\n      \n    });\n  }\n\n\n  render(){\n    const formElementsArray = [];\n    for(let key in this.state.createForm){\n      formElementsArray.push({\n        id: key,\n        config:this.state.createForm[key]\n      })\n\n    }\n    return (\n     //    <div className=\"Person\" >\n     <div className=\"register\">\n       \n         <h1>Registration</h1>\n         <hr className=\"line\"></hr>\n     <Form id='myForm'\n            className=\"form\"\n            ref= { form => this.messageForm = form }\n            onSubmit={ this.onSubmit.bind( this )}>\n     {formElementsArray.map(formElement =>(\n       <Input\n            key={formElement.id}\n            elementType = {formElement.config.elementType}\n            elementConfig = {formElement.config.elementConfig}\n            value = {formElement.config.value}\n            label = {formElement.config.label}\n            shouldValidate={formElement.config.validation}\n            invalid={!formElement.config.valid}\n            changed = {(event) => this.inputChangedHandler(event, formElement.id )}\n            touched= {formElement.config.touched}\n            errors = {formElement.config.errors}\n       />\n     ))}\n     \n     <Button variant=\"primary\" type=\"submit\" disabled={!this.state.formisValid}>\n       Submit\n     </Button>\n     {this.state.loggedIn? <Redirect to=\"/login\" /> : console.log(\"\")}\n   </Form>\n   </div>\n    );\n    }\n }\n \n export default CreateForm;","/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/Forms/addInfo.js",["107","108","109","110","111","112","113"],"import React, {Component, isValidElement} from 'react';\nimport axios from 'axios';\nimport validator from 'validator';\nimport styled from 'styled-components'\nimport Input from '../UI/Input/input.js';\nimport {Form , Button} from 'react-bootstrap'\nimport {Link, Redirect} from 'react-router-dom'\n\nclass addInfo extends Component{\n  state = {\n    addInfo:{\n      description:{\n        elementType: \"textarea\",\n        elementConfig:{\n          type:'text',\n          placeholder:'Name of Task',\n          id:\"task\"\n        },\n        value: '',\n        label: 'Description',\n        validation: {\n           required:true,\n           \n        },\n        valid:false,\n        touched: false,\n        errors:[]\n\n      },\n      name:{\n        elementType: \"input\",\n        elementConfig:{\n          type:'text',\n          placeholder:'Your Name',\n          id:\"name\"\n        },\n        value: '',\n        label: 'Name',\n        validation: {\n           required:true,\n           \n        },\n        valid:false,\n        touched: false\n\n      },\n      email: {\n        elementType: \"input\",\n        elementConfig:{\n          type:'email',\n          placeholder:'example@email.com',\n          id:\"email\"\n        },\n        value: '',\n        label: 'Email',\n        validation: {\n          required:true,\n          isEmail: true,\n          \n       },\n       valid:false,\n       errors:[]\n       \n\n      },\n      education: {\n        elementType: \"select\",\n        elementConfig:{\n          options: [\n            {value:'', displayValue:''},\n            {value:'High School Certificate', displayValue:'High School Certificate'},\n            {value:'Diploma', displayValue:'Diploma'},\n            {value:'Associates', displayValue:'Associates'},\n            {value:'Bachelors', displayValue:'Bachelors'},\n            {value:'Masters', displayValue:'Master'},\n            {value:'Doctorate', displayValue:'Doctorate'},\n            \n\n          ],\n          placeholder:'Education',\n          id:\"userType\",\n          \n        },\n        value: '',\n        label: 'Education',\n        validation: {\n        required:true,\n        \n        },\n        valid:false,\n        touched: false\n    },\n        yearsExperience:{        \n            elementType: \"input\",\n            elementConfig:{\n                type:'Number',\n                placeholder:'years of experience',\n                id:\"name\"\n            },\n            value: '',\n            label: 'Years of Experience',\n            validation: {\n            required:true,\n            \n            },\n            valid:false,\n            touched: false\n\n\n        },\n            },\n    person:{},\n    formisValid: false,\n    loggedIn : false,\n    loggedInPerson : {\n\n    },\n\n  \n}\n  componentDidMount(){\n    let url = window.location.search;\n    url = url.split(\"=\")[1]\n    axios.get('http://localhost:3000/users/'+url).then(response =>{\n        this.setState({person:response.data})\n        console.log(this.state.person);\n     });\n     \n     \n     if(localStorage.getItem(\"thisToken\") !== \"Bearer \" && localStorage.getItem(\"thisToken\")){\n        let config = {\n            headers:{\n                Authorization: localStorage.getItem(\"thisToken\") \n            }\n        }\n        axios.get('http://localhost:3000/users/me',config).then(response =>{\n        this.setState({person:response.data, loggedIn: true})\n        console.log(this.state.loggedInPerson);\n        this.state.addInfo.description.value = this.state.person.description;\n     });\n        \n    }\n\n  }\n  checkValidity(value, rules, element){\n    let isValid = true;\n    if(rules.required){\n        isValid = value.trim() !=='' && isValid;\n        if(!isValid){\n        element.errors.push(\"This field must not be empty\")\n        }\n    }\n    if(rules.minLength){\n      const minChar = rules.minLength\n      isValid = value.length >= rules.minLength && isValid;\n      const errorMessage = \"Input must be \" + minChar + \" characters long\"\n      if(!isValid){\n        element.errors.push(errorMessage)\n        }\n    }\n    if(rules.isEmail){\n      isValid = validator.isEmail(value)  && isValid ;\n      if(!isValid && value.trim()!== ''){\n        element.errors.push(\"Must be a Valid Email\")\n        }\n  }\n    if(rules.confirmPassword){\n      isValid = value === this.state.addInfo.password.value && isValid\n      if(!isValid){\n      element.errors.push(\"Passwords Must Match\")\n      }\n    }\n    return isValid\n  }\n  inputChangedHandler = (event, inputIdentifier) =>{\n   const updatedCreateForm = {\n     ...this.state.addInfo\n   };\n   const updatedFormElement = {\n     ...updatedCreateForm[inputIdentifier]\n   };\n   updatedFormElement.errors = []\n   updatedFormElement.value = event.target.value\n   updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation, updatedFormElement)\n   updatedFormElement.touched = true\n   console.log(updatedFormElement)\n   updatedCreateForm[inputIdentifier] = updatedFormElement\n   let formisValid = true; \n   for(let inputIdentifier in updatedCreateForm){\n     formisValid = updatedCreateForm[inputIdentifier].valid && formisValid\n   }\n   this.setState({addInfo: updatedCreateForm, formisValid });\n  }\n\n  onSubmit = (props) =>{ \n    props.preventDefault();\n\n    const name = this.state.addInfo.name.value;\n    const description = this.state.addInfo.description.value;\n    const email = this.state.addInfo.email.value;\n    const owner = this.state.person._id;\n    const message = this.state.addInfo.message.value;\n    console.log(owner);\n    const data = {\n      name,\n      description,\n      email,\n      owner,\n      message\n    }\n    console.log(data)\n    axios.post('http://localhost:3000/thetasks', data)\n    .then( (response) => {\n      console.log(response.data);\n      this.setState({loggedIn: true});\n    })\n    .catch((error) => {\n      console.log(error);\n      \n    });\n  }\n\n\n  render(){\n      const divStyle = {\n          \"width\":\"400px\",\n           \"height\":\"80px\",\n           \"wordWrap\": \"breakWord\"\n      }\n    const formElementsArray = [];\n    for(let key in this.state.addInfo){\n      formElementsArray.push({\n        id: key,\n        config:this.state.addInfo[key]\n      })\n\n    }\n    return (\n     //    <div className=\"Person\" >\n     <div>\n         <h1>Update Your Information</h1>\n        \n     <form id='myForm'\n            className=\"form\"\n            ref= { form => this.messageForm = form }\n            onSubmit={ this.onSubmit.bind( this )}>\n     {formElementsArray.map(formElement =>(\n       <Input\n            key={formElement.id}\n            elementType = {formElement.config.elementType}\n            elementConfig = {formElement.config.elementConfig}\n            value = {formElement.config.value}\n            label = {formElement.config.label}\n            shouldValidate={formElement.config.validation}\n            invalid={!formElement.config.valid}\n            changed = {(event) => this.inputChangedHandler(event, formElement.id )}\n            touched= {formElement.config.touched}\n            errors = {formElement.config.errors}\n       />\n     ))}\n     \n     <Button variant=\"primary\" type=\"submit\" disabled={!this.state.formisValid}>\n       Submit\n     </Button>\n    \n   </form>\n  \n   </div>\n    );\n    }\n }\n \n export default addInfo;","/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/Forms/createTask.js",["114","115","116","117","118","119","120","121"],"import React, {Component, isValidElement} from 'react';\nimport axios from 'axios';\nimport validator from 'validator';\nimport './formClasses.css'\nimport styled from 'styled-components'\nimport Input from '../UI/Input/input.js';\nimport {Form , Button} from 'react-bootstrap'\nimport {Link, Redirect} from 'react-router-dom'\n\nclass TaskForm extends Component{\n  state = {\n    taskForm:{\n      description:{\n        elementType: \"textarea\",\n        elementConfig:{\n          type:'text',\n          placeholder:'Name of Task',\n          id:\"task\"\n        },\n        value: '',\n        label: 'Task',\n        validation: {\n           required:true,\n            minLength:5\n        },\n        valid:false,\n        touched: false,\n        errors:[]\n\n      },\n      name:{\n        elementType: \"input\",\n        elementConfig:{\n          type:'text',\n          placeholder:'Your Name',\n          id:\"name\"\n        },\n        value: '',\n        label: 'Name',\n        validation: {\n           required:true,\n            minLength:2\n        },\n        valid:false,\n        touched: false\n\n      },\n      email: {\n        elementType: \"input\",\n        elementConfig:{\n          type:'email',\n          placeholder:'example@email.com',\n          id:\"email\"\n        },\n        value: '',\n        label: 'Email',\n        validation: {\n          required:true,\n          isEmail: true,\n          \n       },\n       valid:false,\n       errors:[]\n       \n\n      },\n      dueDate: {\n          elementType: \"input\",\n          elementConfig:{\n          type:'date',\n          id:\"date\"\n        },\n        value: '',\n        label: 'Due Date',\n        validation: {\n          required:true,\n          \n       },\n       valid:false,\n       touched: false,\n       errors:[]\n      },\n      message:{\n        elementType: \"textarea\",\n        elementConfig:{\n          type:'text',\n          placeholder:'Your Message',\n          id:\"message\"\n        },\n        value: '',\n        label: 'Message',\n        validation: {\n           required:true,\n           \n        },\n        valid:false,\n        touched: false,\n        errors:[]\n        \n      }\n\n    },\n    person:{},\n    formisValid: false,\n    loggedIn : false,\n    loggedInPerson : {\n\n    },\n\n  }\n  componentDidMount(){\n    let url = window.location.search;\n    url = url.split(\"=\")[1]\n    axios.get('http://localhost:3000/users/'+url).then(response =>{\n        this.setState({person:response.data})\n        console.log(this.state.person);\n     });\n     \n     \n     if(localStorage.getItem(\"thisToken\") !== \"Bearer \" && localStorage.getItem(\"thisToken\")){\n        let config = {\n            headers:{\n                Authorization: localStorage.getItem(\"thisToken\") \n            }\n        }\n        axios.get('http://localhost:3000/users/me',config).then(response =>{\n        this.setState({loggedInPerson:response.data})\n        console.log(this.state.loggedInPerson);      \n\n\n        this.state.taskForm.name.value = this.state.loggedInPerson.name;\n        this.state.taskForm.email.value = this.state.loggedInPerson.email;\n      });\n        \n    }\n\n  }\n  checkValidity(value, rules, element){\n    let isValid = true;\n    if(rules.required){\n      isValid = value.trim() !=='' && isValid;\n      if(!isValid){\n      element.errors.push(\"This field must not be empty\")\n      }\n   }\n    if(rules.isEmail){\n      isValid = validator.isEmail(value)  && isValid ;\n      if(!isValid && value.trim()!== ''){\n        element.errors.push(\"Must be a Valid Email\")\n        }\n  }\n\n    return isValid\n  }\n  inputChangedHandler = (event, inputIdentifier) =>{\n   const updatedCreateForm = {\n     ...this.state.taskForm\n   };\n   const updatedFormElement = {\n     ...updatedCreateForm[inputIdentifier]\n   };\n   updatedFormElement.errors = []\n   updatedFormElement.value = event.target.value\n   updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation, updatedFormElement)\n   updatedFormElement.touched = true\n   console.log(updatedFormElement)\n   updatedCreateForm[inputIdentifier] = updatedFormElement\n   let formisValid = true; \n   for(let inputIdentifier in updatedCreateForm){\n     formisValid = updatedCreateForm[inputIdentifier].valid && formisValid\n   }\n   this.setState({taskForm: updatedCreateForm, formisValid });\n  }\n\n  onSubmit = (props) =>{ \n    props.preventDefault();\n    let dueDate = new Date(this.state.taskForm.dueDate.value);\n    let url = window.location.search;\n    url = url.split(\"=\")[1]\n    const name = this.state.taskForm.name.value;\n    const description = this.state.taskForm.description.value;\n    const email = this.state.taskForm.email.value;\n    const owner = this.state.person._id;\n    const message = this.state.taskForm.message.value;\n    const sender = this.state.loggedInPerson._id;\n    console.log(owner);\n    const data = {\n      name,\n      dueDate,\n      description,\n      email,\n      owner,\n      message,\n      sender\n    }\n    console.log(data)\n    axios.post('http://localhost:3000/thetasks', data)\n    .then( (response) => {\n      console.log(response.data);\n      this.setState({loggedIn: true});\n    })\n    .catch((error) => {\n      console.log(error);\n      \n    });\n  }\n\n\n  render(){\n      const divStyle = {\n          \"width\":\"400px\",\n           \"height\":\"80px\",\n           \"wordWrap\": \"breakWord\"\n      }\n    const formElementsArray = [];\n    for(let key in this.state.taskForm){\n      formElementsArray.push({\n        id: key,\n        config:this.state.taskForm[key]\n      })\n\n    }\n    return (\n     //    <div className=\"Person\" >\n     <div>\n       <div className=\"userInfo\">\n         <img></img>\n         <h3> {this.state.person.name}</h3>\n         <h4>{this.state.person.occupation}</h4>\n       <div className={divStyle}>Description: <p>{this.state.person.description}</p></div>\n       <h4>Education: {this.state.person.education}</h4>\n       <h4>Experience: {this.state.person.experience}</h4>\n       <p></p> \n       </div>\n       <br></br>\n     <form id='myForm'\n            className=\"taskForm\"\n            ref= { form => this.messageForm = form }\n            onSubmit={ this.onSubmit.bind( this )}>\n     {formElementsArray.map(formElement =>(\n       <Input\n            key={formElement.id}\n            elementType = {formElement.config.elementType}\n            elementConfig = {formElement.config.elementConfig}\n            value = {formElement.config.value}\n            label = {formElement.config.label}\n            shouldValidate={formElement.config.validation}\n            invalid={!formElement.config.valid}\n            changed = {(event) => this.inputChangedHandler(event, formElement.id )}\n            touched= {formElement.config.touched}\n            errors = {formElement.config.errors}\n       />\n     ))}\n     \n     <Button variant=\"primary\" type=\"submit\" disabled={!this.state.formisValid}>\n       Submit\n     </Button>\n     {this.state.loggedIn? <Redirect to=\"/\" /> : console.log(\"\")}\n   </form>\n  \n   </div>\n    );\n    }\n }\n \n export default TaskForm;","/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/Persons/Person/person.js",[],"/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/Persons/persons.js",[],"/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/UI/Input/input.js",[],"/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/Tasks/tasks.js",[],"/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/Requests/requests.js",[],"/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/Requests/Request/request.js",["122","123","124","125","126"],"import React,{Component} from 'react';\n// import './Person.css';\nimport axios from 'axios';\nimport './request.css'\nimport {FaUserAlt, FaCheck} from  'react-icons/fa'\nimport styled from 'styled-components'\nimport {Button} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\nimport PaymentModal from '../../Modals/paymentmodal'\nconst StyledDiv = styled.div`\n\nwidth: 20%;\nmargin: 16px auto;\nborder: 1px hidden #eee;\nbox-shadow: 0 4px 4px black;\ndisplay : block;\npadding: 16px;\ntext-align: center;\nfont-family: Poppins;\ntransition: ease-in 0.1s;\n@media (min-width: 500px){\n        width:450px;\n    }\n&:hover{\n  box-shadow: 0 4px 4px white;\n\n    }\n`;\nclass Task extends Component{\n   state = {\n        id : this.props.id,\n        show: false,\n        edit: false,\n\n   }\n    deleteTask = (props) =>{\n        let config = {\n            headers:{\n              Authorization: localStorage.getItem(\"thisToken\")\n            }\n          }\n     let check = window.confirm(\"Are you sure you want to delete this task?\");\n     if(check == true){\n        axios.delete('http://localhost:3000/tasks/'+this.props.id , config)\n        .then((response) => {\n          console.log(response.data)\n      \n        })\n        .catch( (error) => {\n          console.log(error.message);\n          this.setState({validLogin: false})\n          \n        });\n       \n        \n    }\n     }\n    acceptTask = (props) =>{\n        let config = {\n            headers:{\n              Authorization: localStorage.getItem(\"thisToken\")\n            }\n          }\n        const data = {\n            accepted: true,\n            editOwner: true,\n        }\n        let check = window.confirm(\"Are you sure you want to accept this request?\")\n        if(check == true){\n        axios.patch('http://localhost:3000/tasks/'+this.props.id , data, config)\n        .then((response) => {\n          console.log(response.data)\n            this.setState({edit: true});\n        })\n        .catch( (error) => {\n          console.log(error.message);\n          \n          \n        });\n       \n    }\n    }\n\n    \n    toggleShow = (props) =>{\n        const currShow = this.state.show;\n        this.setState({show: !currShow});\n    }\n    render() {\n    const url = \"/connect?id=\" \n    const todayDate = Date.now()\n    console.log(this.props.dueDate)\n    const newDate =  new Date(this.props.dueDate)\n    let modal1 =[]\n    let accepted = null\n    if(this.state.show){\n        modal1 = (\n            <div>\n            <PaymentModal id={this.props.id} toShow={this.state.show} />\n            </div>\n        );\n    }\n    if(this.props.accepted){\n      accepted = \"Accepted\"\n    }\n    else{\n      accepted = \"Pending...\"\n    }\n\n   return (\n   \n    <StyledDiv >\n        <h2>{this.props.description}</h2>\n        <hr className=\"line\"></hr>\n        {accepted}\n        <hr className=\"line\"></hr>\n  <p>Billing Method: {!this.props.billingMethod? \"Pending\" : this.props.billingMethod} </p> \n    {modal1}\n  <p>Hours: {!this.props.hours? \"Pending\":this.props.hours } </p> \n  <p>Payment Method: {!this.props.paymentMethod? <Button onClick={this.toggleShow}>Add method</Button> : this.props.paymentMethod} </p> \n   <p>Due Date : {Math.floor((newDate- todayDate)/(1000*3600*24))} days</p>\n   <p>Details: {this.props.message}</p>\n   <Button className=\"btn-success\" onClick={this.acceptTask}> Confirm <FaCheck/></Button>{\" \"}\n   <Button className=\"btn-danger\" onClick={this.deleteTask} disabled={this.props.edit}>Reject</Button>\n   \n\n   </StyledDiv> \n   \n   );\n   }\n}\n\nexport default Task;","/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/Tasks/Task/task.js",["127","128","129","130","131"],"import React,{Component} from 'react';\n// import './Person.css';\nimport axios from 'axios';\nimport './task.css'\nimport {FaUserAlt, FaCheck} from  'react-icons/fa'\nimport styled from 'styled-components'\nimport {Button} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\nimport UpdateModal from '../../Modals/updatemodal'\nconst StyledDiv = styled.div`\n\nwidth: 20%;\nmargin: 16px auto;\nborder: 1px hidden #eee;\nbox-shadow: 0 4px 4px black;\ndisplay : block;\npadding: 16px;\ntext-align: center;\nfont-family: Poppins;\ntransition: ease-in 0.1s;\n@media (min-width: 500px){\n        width:450px;\n    }\n&:hover{\n  box-shadow: 0 4px 4px white;\n\n    }\n`;\nclass Task extends Component{\n   state = {\n        id : this.props.id,\n        show: false,\n        edit: false,\n\n   }\n    deleteTask = (props) =>{\n        let config = {\n            headers:{\n              Authorization: localStorage.getItem(\"thisToken\")\n            }\n          }\n     let check = window.confirm(\"Are you sure you want to delete this task?\");\n     if(check == true){\n        axios.delete('http://localhost:3000/tasks/'+this.props.id , config)\n        .then((response) => {\n          console.log(response.data)\n      \n        })\n        .catch( (error) => {\n          console.log(error.message);\n          this.setState({validLogin: false})\n          \n        });\n       \n        \n    }\n     }\n    acceptTask = (props) =>{\n        let config = {\n            headers:{\n              Authorization: localStorage.getItem(\"thisToken\")\n            }\n          }\n        const data = {\n            accepted: true,\n            editOwner: true,\n        }\n        let check = window.confirm(\"Are you sure you want to accept this request?\")\n        if(check == true){\n        axios.patch('http://localhost:3000/tasks/'+this.props.id , data, config)\n        .then((response) => {\n          console.log(response.data)\n            this.setState({edit: true});\n        })\n        .catch( (error) => {\n          console.log(error.message);\n          \n          \n        });\n       \n    }\n    }\n\n    \n    toggleShow = (props) =>{\n        const currShow = this.state.show;\n        this.setState({show: !currShow});\n    }\n    render() {\n    const url = \"/connect?id=\" \n    const todayDate = Date.now()\n    console.log(this.props.dueDate)\n    const newDate =  new Date(this.props.dueDate)\n    let modal1 =[]\n    if(this.state.show){\n        modal1 = (\n            <div>\n            <UpdateModal id={this.props.id} toShow={this.state.show} owner={this.props.id}/>\n            </div>\n        );\n    }\n   return (\n   \n    <StyledDiv >\n        <h2>{this.props.description}</h2>\n        <hr className=\"line\"></hr>\n   <p >From: {this.props.name}, {this.props.email}</p>\n  <p>Billing Method: {!this.props.billingMethod? <Button onClick={this.toggleShow}>Add method</Button> : this.props.billingMethod} </p> \n    {modal1}\n  <p>Hours: {!this.props.hours? <Button onClick={this.toggleShow}>Add Hours</Button>:this.props.hours } </p> \n   <p>Respond In : {Math.floor((newDate- todayDate)/(1000*3600*24))} days</p>\n   <p>Details: {this.props.message}</p>\n   <Button className=\"btn-success\" onClick={this.acceptTask}> Accept <FaCheck/></Button>{\" \"}\n   <Button className=\"btn-danger\" onClick={this.deleteTask} disabled={this.props.edit}>Reject</Button>\n\n   </StyledDiv> \n   \n   );\n   }\n}\n\nexport default Task;","/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/Modals/paymentmodal.js",["132","133","134","135","136","137"],"import React, {Component} from 'react';\n// import './Person.css';\nimport {FaUserAlt, FaCheck} from  'react-icons/fa'\nimport axios from 'axios'\nimport styled from 'styled-components'\nimport Input from '../UI/Input/input';\nimport {Button, Modal, Form} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\n\nclass UpdateModal extends Component{  \n    state={\n        updateForm:{\n          paymentMethod: {\n            elementType: \"select\",\n            elementConfig:{\n              options: [\n                {value:'', displayValue:''},\n                {value:'MPESA', displayValue:'MPESA'},\n                {value:'Debit/Credit Card', displayValue:'Debit/Credit Card'},\n                {value:'Cash', displayValue:'Cash'}\n              ],\n              id:\"payment\"\n            },\n            value: '',\n            label: 'Payment Method'\n    \n          },\n          \n        },\n        task :{},\n        show : true,\n        open : false,\n    }\n        componentDidMount(){\n            const myId = this.props.id;\n        }\n      handleClose = (props) => {\n        \n        this.setState({show:false});\n        this.setState({open:false});\n        }\n        handleOpen = (props) => {\n        \n          this.setState({open:true});\n          this.setState({show:true});\n       }\n       inputChangedHandler = (event, inputIdentifier) =>{\n        const updatedCreateForm = {\n          ...this.state.updateForm\n        };\n        const updatedFormElement = {\n          ...updatedCreateForm[inputIdentifier]\n        };\n        updatedFormElement.value = event.target.value\n        updatedCreateForm[inputIdentifier] = updatedFormElement\n        this.setState({updateForm: updatedCreateForm});\n       }\n       onSubmit = (props) =>{ \n        props.preventDefault();\n        console.log(this.props.id)\n        const paymentMethod = this.state.updateForm.paymentMethod.value;\n        const data = {\n              paymentMethod,\n\n        }\n        let config = {\n          headers:{\n            Authorization: localStorage.getItem(\"thisToken\")\n          }\n        }\n        axios.patch('http://localhost:3000/tasks/'+this.props.id , data, config)\n        .then((response) => {\n          console.log(response.data)\n      \n        })\n        .catch( (error) => {\n          console.log(error.message);\n          \n        });\n       \n        \n    }\n     \n   \n \n    render(){\n      const formElementsArray = [];\n    for(let key in this.state.updateForm){\n      formElementsArray.push({\n        id: key,\n        config:this.state.updateForm[key]\n      })\n\n    }\n\n      return(\n    <Modal show={this.state.open == false ? this.state.show : this.state.show} onHide={this.handleClose}>\n    <Modal.Header closeButton>\n      <Modal.Title>Update the Request</Modal.Title>\n    </Modal.Header>\n    <Modal.Body><Form id='myForm'\n            className=\"form\">\n    <div>\n    {formElementsArray.map(formElement =>(\n       <Input\n            key={formElement.id}\n            elementType = {formElement.config.elementType}\n            elementConfig = {formElement.config.elementConfig}\n            value = {formElement.config.value}\n            label = {formElement.config.label}\n            changed = {(event) => this.inputChangedHandler(event, formElement.id )}\n       />\n     ))}</div>\n     </Form></Modal.Body>\n    \n    <Modal.Footer>\n      <Button variant=\"secondary\" onClick={this.handleClose}>\n        Close\n      </Button>\n      <Button variant=\"primary\" onClick={this.onSubmit}>\n        Save Changes\n      </Button>\n    </Modal.Footer>\n  </Modal>\n    );\n    }\n    }\n\nexport default UpdateModal;","/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/Modals/updatemodal.js",["138","139","140","141","142","143"],"import React, {Component} from 'react';\n// import './Person.css';\nimport {FaUserAlt, FaCheck} from  'react-icons/fa'\nimport axios from 'axios'\nimport styled from 'styled-components'\nimport Input from '../UI/Input/input';\nimport {Button, Modal, Form} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\n\nclass UpdateModal extends Component{  \n    state={\n        updateForm:{\n          billingMethod: {\n            elementType: \"select\",\n            elementConfig:{\n              options: [\n                {value:'', displayValue:''},\n                {value:'Hourly', displayValue:'Hourly'},\n                {value:'One-Time Fee', displayValue:'One-Time Fee'},\n                {value:'Purchase', displayValue:'Purchase'}\n              ],\n              id:\"billing\"\n            },\n            value: '',\n            label: 'Billing Method'\n    \n          },\n          hours: {\n            elementType: \"input\",\n            elementConfig:{\n            type:'number',\n            placeholder:\"estimated hours\",\n            id:\"hours\"\n            },\n          value: '',\n          label: 'Hours',\n          hidden: false,\n          },\n          \n        },\n        task :{},\n        show : true,\n        open : false,\n    }\n        componentDidMount(){\n            const myId = this.props.id;\n        }\n      handleClose = (props) => {\n        \n        this.setState({show:false});\n        this.setState({open:false});\n        }\n        handleOpen = (props) => {\n        \n          this.setState({open:true});\n          this.setState({show:true});\n       }\n       inputChangedHandler = (event, inputIdentifier) =>{\n        const updatedCreateForm = {\n          ...this.state.updateForm\n        };\n        const updatedFormElement = {\n          ...updatedCreateForm[inputIdentifier]\n        };\n        updatedFormElement.value = event.target.value\n        updatedCreateForm[inputIdentifier] = updatedFormElement\n        this.setState({updateForm: updatedCreateForm});\n       }\n       onSubmit = (props) =>{ \n        props.preventDefault();\n        \n        const billingMethod = this.state.updateForm.billingMethod.value;\n        const hours = this.state.updateForm.hours.value;\n        const data = {\n          billingMethod,\n          hours\n        }\n        let config = {\n          headers:{\n            Authorization: localStorage.getItem(\"thisToken\")\n          }\n        }\n        axios.patch('http://localhost:3000/tasks/'+this.props.id , data, config)\n        .then((response) => {\n          console.log(response.data)\n      \n        })\n        .catch( (error) => {\n          console.log(error.message);\n          this.setState({validLogin: false})\n          \n        });\n       \n        \n    }\n     \n   \n \n    render(){\n      const formElementsArray = [];\n    for(let key in this.state.updateForm){\n      formElementsArray.push({\n        id: key,\n        config:this.state.updateForm[key]\n      })\n\n    }\n\n      return(\n    <Modal show={this.state.open == false ? this.state.show : this.state.show} onHide={this.handleClose}>\n    <Modal.Header closeButton>\n      <Modal.Title>Update the Request</Modal.Title>\n    </Modal.Header>\n    <Modal.Body><Form id='myForm'\n            className=\"form\">\n    <div>\n    {formElementsArray.map(formElement =>(\n       <Input\n            key={formElement.id}\n            elementType = {formElement.config.elementType}\n            elementConfig = {formElement.config.elementConfig}\n            value = {formElement.config.value}\n            label = {formElement.config.label}\n            changed = {(event) => this.inputChangedHandler(event, formElement.id )}\n       />\n     ))}</div>\n     </Form></Modal.Body>\n    \n    <Modal.Footer>\n      <Button variant=\"secondary\" onClick={this.handleClose}>\n        Close\n      </Button>\n      <Button variant=\"primary\" onClick={this.onSubmit}>\n        Save Changes\n      </Button>\n    </Modal.Footer>\n  </Modal>\n    );\n    }\n    }\n\nexport default UpdateModal;",{"ruleId":"144","severity":1,"message":"145","line":10,"column":8,"nodeType":"146","messageId":"147","endLine":10,"endColumn":14},{"ruleId":"148","severity":1,"message":"149","line":17,"column":15,"nodeType":"150","endLine":17,"endColumn":27},{"ruleId":"148","severity":1,"message":"149","line":23,"column":1,"nodeType":"150","endLine":23,"endColumn":13},{"ruleId":"148","severity":1,"message":"149","line":24,"column":1,"nodeType":"150","endLine":24,"endColumn":13},{"ruleId":"144","severity":1,"message":"151","line":5,"column":9,"nodeType":"146","messageId":"147","endLine":5,"endColumn":13},{"ruleId":"144","severity":1,"message":"152","line":10,"column":9,"nodeType":"146","messageId":"147","endLine":10,"endColumn":19},{"ruleId":"144","severity":1,"message":"153","line":16,"column":9,"nodeType":"146","messageId":"147","endLine":16,"endColumn":20},{"ruleId":"144","severity":1,"message":"154","line":2,"column":8,"nodeType":"146","messageId":"147","endLine":2,"endColumn":14},{"ruleId":"144","severity":1,"message":"154","line":5,"column":8,"nodeType":"146","messageId":"147","endLine":5,"endColumn":14},{"ruleId":"144","severity":1,"message":"155","line":7,"column":9,"nodeType":"146","messageId":"147","endLine":7,"endColumn":13},{"ruleId":"144","severity":1,"message":"156","line":1,"column":27,"nodeType":"146","messageId":"147","endLine":1,"endColumn":41},{"ruleId":"144","severity":1,"message":"154","line":4,"column":8,"nodeType":"146","messageId":"147","endLine":4,"endColumn":14},{"ruleId":"144","severity":1,"message":"151","line":7,"column":9,"nodeType":"146","messageId":"147","endLine":7,"endColumn":13},{"ruleId":"144","severity":1,"message":"156","line":1,"column":27,"nodeType":"146","messageId":"147","endLine":1,"endColumn":41},{"ruleId":"144","severity":1,"message":"154","line":4,"column":8,"nodeType":"146","messageId":"147","endLine":4,"endColumn":14},{"ruleId":"144","severity":1,"message":"155","line":6,"column":9,"nodeType":"146","messageId":"147","endLine":6,"endColumn":13},{"ruleId":"144","severity":1,"message":"151","line":7,"column":9,"nodeType":"146","messageId":"147","endLine":7,"endColumn":13},{"ruleId":"144","severity":1,"message":"157","line":7,"column":15,"nodeType":"146","messageId":"147","endLine":7,"endColumn":23},{"ruleId":"158","severity":1,"message":"159","line":139,"column":9,"nodeType":"160","messageId":"161","endLine":139,"endColumn":39},{"ruleId":"144","severity":1,"message":"162","line":225,"column":13,"nodeType":"146","messageId":"147","endLine":225,"endColumn":21},{"ruleId":"144","severity":1,"message":"156","line":1,"column":27,"nodeType":"146","messageId":"147","endLine":1,"endColumn":41},{"ruleId":"144","severity":1,"message":"154","line":5,"column":8,"nodeType":"146","messageId":"147","endLine":5,"endColumn":14},{"ruleId":"144","severity":1,"message":"155","line":7,"column":9,"nodeType":"146","messageId":"147","endLine":7,"endColumn":13},{"ruleId":"144","severity":1,"message":"151","line":8,"column":9,"nodeType":"146","messageId":"147","endLine":8,"endColumn":13},{"ruleId":"158","severity":1,"message":"159","line":131,"column":9,"nodeType":"160","messageId":"161","endLine":131,"endColumn":33},{"ruleId":"158","severity":1,"message":"159","line":132,"column":9,"nodeType":"160","messageId":"161","endLine":132,"endColumn":34},{"ruleId":"144","severity":1,"message":"163","line":179,"column":5,"nodeType":"146","messageId":"147","endLine":179,"endColumn":8},{"ruleId":"164","severity":1,"message":"165","line":227,"column":10,"nodeType":"150","endLine":227,"endColumn":15},{"ruleId":"144","severity":1,"message":"166","line":5,"column":9,"nodeType":"146","messageId":"147","endLine":5,"endColumn":18},{"ruleId":"144","severity":1,"message":"151","line":8,"column":9,"nodeType":"146","messageId":"147","endLine":8,"endColumn":13},{"ruleId":"167","severity":1,"message":"168","line":43,"column":15,"nodeType":"169","messageId":"170","endLine":43,"endColumn":17},{"ruleId":"167","severity":1,"message":"168","line":69,"column":18,"nodeType":"169","messageId":"170","endLine":69,"endColumn":20},{"ruleId":"144","severity":1,"message":"163","line":90,"column":11,"nodeType":"146","messageId":"147","endLine":90,"endColumn":14},{"ruleId":"144","severity":1,"message":"166","line":5,"column":9,"nodeType":"146","messageId":"147","endLine":5,"endColumn":18},{"ruleId":"144","severity":1,"message":"151","line":8,"column":9,"nodeType":"146","messageId":"147","endLine":8,"endColumn":13},{"ruleId":"167","severity":1,"message":"168","line":43,"column":15,"nodeType":"169","messageId":"170","endLine":43,"endColumn":17},{"ruleId":"167","severity":1,"message":"168","line":69,"column":18,"nodeType":"169","messageId":"170","endLine":69,"endColumn":20},{"ruleId":"144","severity":1,"message":"163","line":90,"column":11,"nodeType":"146","messageId":"147","endLine":90,"endColumn":14},{"ruleId":"144","severity":1,"message":"166","line":3,"column":9,"nodeType":"146","messageId":"147","endLine":3,"endColumn":18},{"ruleId":"144","severity":1,"message":"171","line":3,"column":20,"nodeType":"146","messageId":"147","endLine":3,"endColumn":27},{"ruleId":"144","severity":1,"message":"154","line":5,"column":8,"nodeType":"146","messageId":"147","endLine":5,"endColumn":14},{"ruleId":"144","severity":1,"message":"151","line":8,"column":9,"nodeType":"146","messageId":"147","endLine":8,"endColumn":13},{"ruleId":"144","severity":1,"message":"172","line":35,"column":19,"nodeType":"146","messageId":"147","endLine":35,"endColumn":23},{"ruleId":"167","severity":1,"message":"168","line":97,"column":34,"nodeType":"169","messageId":"170","endLine":97,"endColumn":36},{"ruleId":"144","severity":1,"message":"166","line":3,"column":9,"nodeType":"146","messageId":"147","endLine":3,"endColumn":18},{"ruleId":"144","severity":1,"message":"171","line":3,"column":20,"nodeType":"146","messageId":"147","endLine":3,"endColumn":27},{"ruleId":"144","severity":1,"message":"154","line":5,"column":8,"nodeType":"146","messageId":"147","endLine":5,"endColumn":14},{"ruleId":"144","severity":1,"message":"151","line":8,"column":9,"nodeType":"146","messageId":"147","endLine":8,"endColumn":13},{"ruleId":"144","severity":1,"message":"172","line":46,"column":19,"nodeType":"146","messageId":"147","endLine":46,"endColumn":23},{"ruleId":"167","severity":1,"message":"168","line":110,"column":34,"nodeType":"169","messageId":"170","endLine":110,"endColumn":36},"no-unused-vars","'Person' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Link' is defined but never used.","'titleStyle' is assigned a value but never used.","'navbarStyle' is assigned a value but never used.","'styled' is defined but never used.","'Form' is defined but never used.","'isValidElement' is defined but never used.","'Redirect' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","'divStyle' is assigned a value but never used.","'url' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'FaUserAlt' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'FaCheck' is defined but never used.","'myId' is assigned a value but never used."]