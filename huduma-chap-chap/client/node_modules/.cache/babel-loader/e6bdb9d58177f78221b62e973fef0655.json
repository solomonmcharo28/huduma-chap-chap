{"ast":null,"code":"var _jsxFileName = \"/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/UI/Input/input.js\";\nimport React from 'react';\nimport './input.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst input = props => {\n  let inputElement = null;\n  let inputClasses = [];\n  let errorMessage = null;\n\n  if (props.invalid && props.shouldValidate && props.touched) {\n    inputClasses.push(\"invalid\");\n    errorMessage = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"errorMessage\",\n      children: props.errors.join(\" \")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 24\n    }, this);\n  }\n\n  if (!props.invalid && props.touched) {\n    inputClasses.push(\"valid\");\n  }\n\n  switch (props.elementType) {\n    case 'input':\n      inputClasses.push(\"InputElement\");\n      inputElement = /*#__PURE__*/_jsxDEV(\"input\", {\n        className: inputClasses.join(' '),\n        ...props.elementConfig,\n        value: props.value,\n        onChange: props.changed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 28\n      }, this);\n      break;\n\n    case 'textarea':\n      inputClasses.push(\"TextElement\");\n      inputElement = /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: inputClasses.join(' '),\n        ...props.elementConfig,\n        value: props.value,\n        onChange: props.changed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 28\n      }, this);\n      break;\n\n    case 'select':\n      inputClasses.push(\"InputElement\");\n      inputElement = /*#__PURE__*/_jsxDEV(\"select\", {\n        className: inputClasses.join(' '),\n        value: props.value,\n        onChange: props.changed,\n        children: [props.elementConfig.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.displayValue\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)), \"onChange=\", props.changed]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 29\n      }, this);\n      break;\n\n    default:\n      inputClasses.push(\"InputElement\");\n      inputElement = /*#__PURE__*/_jsxDEV(\"input\", {\n        className: inputClasses.join(' '),\n        ...props.elementConfig,\n        value: props.value,\n        onChange: props.changed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 28\n      }, this);\n      break;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"Label\",\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 1\n    }, this), inputElement, errorMessage]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 1\n  }, this);\n};\n\nexport default input;","map":{"version":3,"sources":["/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/UI/Input/input.js"],"names":["React","input","props","inputElement","inputClasses","errorMessage","invalid","shouldValidate","touched","push","errors","join","elementType","elementConfig","value","changed","options","map","option","displayValue","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;;;AACA,MAAOC,KAAK,GAAIC,KAAD,IAAW;AACtB,MAAIC,YAAY,GAAG,IAAnB;AACA,MAAIC,YAAY,GAAG,EAAnB;AAEA,MAAIC,YAAY,GAAG,IAAnB;;AACA,MAAGH,KAAK,CAACI,OAAN,IAAiBJ,KAAK,CAACK,cAAvB,IAAyCL,KAAK,CAACM,OAAlD,EAA0D;AACtDJ,IAAAA,YAAY,CAACK,IAAb,CAAkB,SAAlB;AACAJ,IAAAA,YAAY,gBAAG;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA,gBAA6BH,KAAK,CAACQ,MAAN,CAAaC,IAAb,CAAkB,GAAlB;AAA7B;AAAA;AAAA;AAAA;AAAA,YAAf;AACH;;AACD,MAAG,CAACT,KAAK,CAACI,OAAP,IAAkBJ,KAAK,CAACM,OAA3B,EAAmC;AAC/BJ,IAAAA,YAAY,CAACK,IAAb,CAAkB,OAAlB;AACH;;AACD,UAAOP,KAAK,CAACU,WAAb;AACI,SAAK,OAAL;AACIR,MAAAA,YAAY,CAACK,IAAb,CAAkB,cAAlB;AACAN,MAAAA,YAAY,gBAAG;AACf,QAAA,SAAS,EAAEC,YAAY,CAACO,IAAb,CAAkB,GAAlB,CADI;AAAA,WAEVT,KAAK,CAACW,aAFI;AAGd,QAAA,KAAK,EAAEX,KAAK,CAACY,KAHC;AAId,QAAA,QAAQ,EAAEZ,KAAK,CAACa;AAJF;AAAA;AAAA;AAAA;AAAA,cAAf;AAKA;;AACJ,SAAK,UAAL;AACIX,MAAAA,YAAY,CAACK,IAAb,CAAkB,aAAlB;AACAN,MAAAA,YAAY,gBAAG;AACf,QAAA,SAAS,EAAEC,YAAY,CAACO,IAAb,CAAkB,GAAlB,CADI;AAAA,WAEXT,KAAK,CAACW,aAFK;AAGf,QAAA,KAAK,EAAEX,KAAK,CAACY,KAHE;AAIf,QAAA,QAAQ,EAAEZ,KAAK,CAACa;AAJD;AAAA;AAAA;AAAA;AAAA,cAAf;AAKA;;AACJ,SAAK,QAAL;AACIX,MAAAA,YAAY,CAACK,IAAb,CAAkB,cAAlB;AACAN,MAAAA,YAAY,gBAAI;AAChB,QAAA,SAAS,EAAEC,YAAY,CAACO,IAAb,CAAkB,GAAlB,CADK;AAEhB,QAAA,KAAK,EAAET,KAAK,CAACY,KAFG;AAGhB,QAAA,QAAQ,EAAEZ,KAAK,CAACa,OAHA;AAAA,mBAIfb,KAAK,CAACW,aAAN,CAAoBG,OAApB,CAA4BC,GAA5B,CAAgCC,MAAM,iBACnC;AAA2B,UAAA,KAAK,EAAEA,MAAM,CAACJ,KAAzC;AAAA,oBAAiDI,MAAM,CAACC;AAAxD,WAAaD,MAAM,CAACJ,KAApB;AAAA;AAAA;AAAA;AAAA,gBADH,CAJe,eAONZ,KAAK,CAACa,OAPA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAhB;AASA;;AACJ;AACIX,MAAAA,YAAY,CAACK,IAAb,CAAkB,cAAlB;AACAN,MAAAA,YAAY,gBAAG;AACf,QAAA,SAAS,EAAEC,YAAY,CAACO,IAAb,CAAkB,GAAlB,CADI;AAAA,WAEXT,KAAK,CAACW,aAFK;AAGf,QAAA,KAAK,EAAEX,KAAK,CAACY,KAHE;AAIf,QAAA,QAAQ,EAAEZ,KAAK,CAACa;AAJD;AAAA;AAAA;AAAA;AAAA,cAAf;AAKA;AApCR;;AAuCJ,sBACA;AAAA,4BACA;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA,gBAA0Bb,KAAK,CAACkB;AAAhC;AAAA;AAAA;AAAA;AAAA,YADA,EAECjB,YAFD,EAGCE,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAOC,CA1DD;;AA4DA,eAAeJ,KAAf","sourcesContent":["import React from 'react'\nimport './input.css'\nconst  input = (props) => {\n    let inputElement = null;\n    let inputClasses = []; \n    \n    let errorMessage = null\n    if(props.invalid && props.shouldValidate && props.touched){\n        inputClasses.push(\"invalid\")\n        errorMessage = <p className=\"errorMessage\">{props.errors.join(\" \")}</p>\n    }\n    if(!props.invalid && props.touched){\n        inputClasses.push(\"valid\")\n    }\n    switch(props.elementType){    \n        case('input'):\n            inputClasses.push(\"InputElement\")\n            inputElement = <input \n            className={inputClasses.join(' ')}\n             {...props.elementConfig} \n             value={props.value}\n             onChange={props.changed}/>;\n            break;\n        case('textarea'):\n            inputClasses.push(\"TextElement\")\n            inputElement = <textarea \n            className={inputClasses.join(' ')}\n            {...props.elementConfig}\n            value={props.value}\n            onChange={props.changed}/>\n            break;\n        case('select'):\n            inputClasses.push(\"InputElement\")\n            inputElement = (<select\n            className={inputClasses.join(' ')}\n            value={props.value}\n            onChange={props.changed}>\n            {props.elementConfig.options.map(option =>(\n                <option key={option.value} value={option.value}>{option.displayValue}</option>\n            ))}\n            onChange={props.changed}\n            </select>);\n            break;\n        default:\n            inputClasses.push(\"InputElement\")\n            inputElement = <input \n            className={inputClasses.join(' ')}\n            {...props.elementConfig}\n            value={props.value}\n            onChange={props.changed}/>\n            break;\n\n    }\nreturn(\n<div>\n<label className=\"Label\">{props.label}</label>\n{inputElement}\n{errorMessage}\n</div>\n)\n};\n\nexport default input"]},"metadata":{},"sourceType":"module"}