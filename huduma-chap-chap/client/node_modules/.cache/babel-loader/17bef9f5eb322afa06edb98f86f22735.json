{"ast":null,"code":"var _jsxFileName = \"/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/Modals/paymentmodal.js\";\nimport React, { Component } from 'react'; // import './Person.css';\n\nimport { FaUserAlt, FaCheck } from 'react-icons/fa';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport Input from '../UI/Input/input';\nimport { Button, Modal, Form } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UpdateModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      updateForm: {\n        paymentMethod: {\n          elementType: \"select\",\n          elementConfig: {\n            options: [{\n              value: '',\n              displayValue: ''\n            }, {\n              value: 'MPESA',\n              displayValue: 'MPESA'\n            }, {\n              value: 'Debit/Credit Card',\n              displayValue: 'Debit/Credit Card'\n            }, {\n              value: 'Cash',\n              displayValue: 'Cash'\n            }],\n            id: \"payment\"\n          },\n          value: '',\n          label: 'Payment Method'\n        }\n      },\n      task: {},\n      show: true,\n      open: false\n    };\n\n    this.handleClose = props => {\n      this.setState({\n        show: false\n      });\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleOpen = props => {\n      this.setState({\n        open: true\n      });\n      this.setState({\n        show: true\n      });\n    };\n\n    this.inputChangedHandler = (event, inputIdentifier) => {\n      const updatedCreateForm = { ...this.state.updateForm\n      };\n      const updatedFormElement = { ...updatedCreateForm[inputIdentifier]\n      };\n      updatedFormElement.value = event.target.value;\n      updatedCreateForm[inputIdentifier] = updatedFormElement;\n      this.setState({\n        updateForm: updatedCreateForm\n      });\n    };\n\n    this.onSubmit = props => {\n      props.preventDefault();\n      console.log(this.props.id);\n      const paymentMethod = this.state.updateForm.paymentMethod.value;\n      const data = {\n        paymentMethod\n      };\n      let config = {\n        headers: {\n          Authorization: localStorage.getItem(\"thisToken\")\n        }\n      };\n      axios.patch('http://localhost:3000/tasks/' + this.props.id, data, config).then(response => {\n        console.log(response.data);\n      }).catch(error => {\n        console.log(error.message);\n      });\n    };\n  }\n\n  componentDidMount() {\n    const myId = this.props.id;\n  }\n\n  render() {\n    const formElementsArray = [];\n\n    for (let key in this.state.updateForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.updateForm[key]\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: this.state.open == false ? this.state.show : this.state.show,\n      onHide: this.handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Update the Request\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          id: \"myForm\",\n          className: \"form\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: formElementsArray.map(formElement => /*#__PURE__*/_jsxDEV(Input, {\n              elementType: formElement.config.elementType,\n              elementConfig: formElement.config.elementConfig,\n              value: formElement.config.value,\n              label: formElement.config.label,\n              changed: event => this.inputChangedHandler(event, formElement.id)\n            }, formElement.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 8\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: this.handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: this.onSubmit,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default UpdateModal;","map":{"version":3,"sources":["/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/Modals/paymentmodal.js"],"names":["React","Component","FaUserAlt","FaCheck","axios","styled","Input","Button","Modal","Form","Link","UpdateModal","state","updateForm","paymentMethod","elementType","elementConfig","options","value","displayValue","id","label","task","show","open","handleClose","props","setState","handleOpen","inputChangedHandler","event","inputIdentifier","updatedCreateForm","updatedFormElement","target","onSubmit","preventDefault","console","log","data","config","headers","Authorization","localStorage","getItem","patch","then","response","catch","error","message","componentDidMount","myId","render","formElementsArray","key","push","map","formElement"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n// import './Person.css';\nimport {FaUserAlt, FaCheck} from  'react-icons/fa'\nimport axios from 'axios'\nimport styled from 'styled-components'\nimport Input from '../UI/Input/input';\nimport {Button, Modal, Form} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\n\nclass UpdateModal extends Component{  \n    state={\n        updateForm:{\n          paymentMethod: {\n            elementType: \"select\",\n            elementConfig:{\n              options: [\n                {value:'', displayValue:''},\n                {value:'MPESA', displayValue:'MPESA'},\n                {value:'Debit/Credit Card', displayValue:'Debit/Credit Card'},\n                {value:'Cash', displayValue:'Cash'}\n              ],\n              id:\"payment\"\n            },\n            value: '',\n            label: 'Payment Method'\n    \n          },\n          \n        },\n        task :{},\n        show : true,\n        open : false,\n    }\n        componentDidMount(){\n            const myId = this.props.id;\n        }\n      handleClose = (props) => {\n        \n        this.setState({show:false});\n        this.setState({open:false});\n        }\n        handleOpen = (props) => {\n        \n          this.setState({open:true});\n          this.setState({show:true});\n       }\n       inputChangedHandler = (event, inputIdentifier) =>{\n        const updatedCreateForm = {\n          ...this.state.updateForm\n        };\n        const updatedFormElement = {\n          ...updatedCreateForm[inputIdentifier]\n        };\n        updatedFormElement.value = event.target.value\n        updatedCreateForm[inputIdentifier] = updatedFormElement\n        this.setState({updateForm: updatedCreateForm});\n       }\n       onSubmit = (props) =>{ \n        props.preventDefault();\n        console.log(this.props.id)\n        const paymentMethod = this.state.updateForm.paymentMethod.value;\n        const data = {\n              paymentMethod,\n\n        }\n        let config = {\n          headers:{\n            Authorization: localStorage.getItem(\"thisToken\")\n          }\n        }\n        axios.patch('http://localhost:3000/tasks/'+this.props.id , data, config)\n        .then((response) => {\n          console.log(response.data)\n      \n        })\n        .catch( (error) => {\n          console.log(error.message);\n          \n        });\n       \n        \n    }\n     \n   \n \n    render(){\n      const formElementsArray = [];\n    for(let key in this.state.updateForm){\n      formElementsArray.push({\n        id: key,\n        config:this.state.updateForm[key]\n      })\n\n    }\n\n      return(\n    <Modal show={this.state.open == false ? this.state.show : this.state.show} onHide={this.handleClose}>\n    <Modal.Header closeButton>\n      <Modal.Title>Update the Request</Modal.Title>\n    </Modal.Header>\n    <Modal.Body><Form id='myForm'\n            className=\"form\">\n    <div>\n    {formElementsArray.map(formElement =>(\n       <Input\n            key={formElement.id}\n            elementType = {formElement.config.elementType}\n            elementConfig = {formElement.config.elementConfig}\n            value = {formElement.config.value}\n            label = {formElement.config.label}\n            changed = {(event) => this.inputChangedHandler(event, formElement.id )}\n       />\n     ))}</div>\n     </Form></Modal.Body>\n    \n    <Modal.Footer>\n      <Button variant=\"secondary\" onClick={this.handleClose}>\n        Close\n      </Button>\n      <Button variant=\"primary\" onClick={this.onSubmit}>\n        Save Changes\n      </Button>\n    </Modal.Footer>\n  </Modal>\n    );\n    }\n    }\n\nexport default UpdateModal;"]},"metadata":{},"sourceType":"module"}