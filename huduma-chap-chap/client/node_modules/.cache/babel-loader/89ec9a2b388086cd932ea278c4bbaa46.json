{"ast":null,"code":"var _jsxFileName = \"/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/Forms/loginUser.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios'; // import './Person.css';\n\nimport './formClasses.css';\nimport styled from 'styled-components';\nimport Input from '../UI/Input/input.js';\nimport { Form, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loginForm: {\n        email: {\n          elementType: \"input\",\n          elementConfig: {\n            type: 'email',\n            placeholder: 'example@email.com',\n            id: \"email\"\n          },\n          value: '',\n          label: 'Email'\n        },\n        password: {\n          elementType: \"input\",\n          elementConfig: {\n            type: 'password',\n            placeholder: \"password\",\n            id: \"password\"\n          },\n          value: '',\n          label: 'Password'\n        }\n      },\n      validLogin: true\n    };\n\n    this.inputChangedHandler = (event, inputIdentifier) => {\n      const updatedCreateForm = { ...this.state.loginForm\n      };\n      const updatedFormElement = { ...updatedCreateForm[inputIdentifier]\n      };\n      updatedFormElement.value = event.target.value;\n      updatedCreateForm[inputIdentifier] = updatedFormElement;\n      this.setState({\n        loginForm: updatedCreateForm\n      });\n    };\n\n    this.onSubmit = props => {\n      props.preventDefault();\n      const email = this.state.loginForm.email.value;\n      const password = this.state.loginForm.password.value;\n      console.log(email);\n      const data = {\n        email,\n        password\n      };\n      axios.post('http://localhost:3000/users/login', data).then(response => {\n        console.log(response.data);\n        const token = \"Bearer \" + response.data.token;\n        localStorage.setItem('thisToken', token);\n        console.log(token);\n        window.location.replace(\"/homepage\");\n      }).catch(error => {\n        console.log(error.message);\n        this.setState({\n          validLogin: false\n        });\n      });\n    };\n  }\n\n  render() {\n    let invalidLogin = null;\n\n    if (!this.state.validLogin) {\n      invalidLogin = /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"invalidLogin\",\n        children: \"Invalid Username/Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this);\n    }\n\n    const formElementsArray = [];\n\n    for (let key in this.state.loginForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.loginForm[key]\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"myForm\",\n        className: \"form\",\n        children: [formElementsArray.map(formElement => /*#__PURE__*/_jsxDEV(Input, {\n          elementType: formElement.config.elementType,\n          elementConfig: formElement.config.elementConfig,\n          value: formElement.config.value,\n          label: formElement.config.label,\n          changed: event => this.inputChangedHandler(event, formElement.id)\n        }, formElement.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 8\n        }, this)), invalidLogin, /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          onClick: this.onSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 6\n    }, this);\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/solomonmcharo/Desktop/Javascript-stuff/huduma-chap-chap/client/src/components/Forms/loginUser.js"],"names":["React","Component","axios","styled","Input","Form","Button","LoginForm","state","loginForm","email","elementType","elementConfig","type","placeholder","id","value","label","password","validLogin","inputChangedHandler","event","inputIdentifier","updatedCreateForm","updatedFormElement","target","setState","onSubmit","props","preventDefault","console","log","data","post","then","response","token","localStorage","setItem","window","location","replace","catch","error","message","render","invalidLogin","formElementsArray","key","push","config","map","formElement"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\n// import './Person.css';\nimport './formClasses.css'\nimport styled from 'styled-components'\nimport Input from '../UI/Input/input.js';\nimport {Form , Button} from 'react-bootstrap'\nclass LoginForm extends Component{\n  state = {\n    loginForm:{\n      email: {\n        elementType: \"input\",\n        elementConfig:{\n          type:'email',\n          placeholder:'example@email.com',\n          id:\"email\"\n        },\n        value: '',\n        label: 'Email'\n\n      },\n      password: {\n        elementType: \"input\",\n        elementConfig:{\n        type:'password',\n        placeholder:\"password\",\n        id:\"password\"\n        },\n      value: '',\n      label: 'Password'\n      },\n      \n    },\n    validLogin:true,\n\n  }\n  inputChangedHandler = (event, inputIdentifier) =>{\n    const updatedCreateForm = {\n      ...this.state.loginForm\n    };\n    const updatedFormElement = {\n      ...updatedCreateForm[inputIdentifier]\n    };\n    updatedFormElement.value = event.target.value\n    updatedCreateForm[inputIdentifier] = updatedFormElement\n    this.setState({loginForm: updatedCreateForm});\n   }\n   \n  onSubmit = (props) =>{ \n    props.preventDefault();\n    \n    const email = this.state.loginForm.email.value;\n    const password = this.state.loginForm.password.value;\n    console.log(email);\n    const data = {\n      email,\n      password\n    }\n    axios.post('http://localhost:3000/users/login', data)\n    .then((response) => {\n      console.log(response.data);\n      const token = \"Bearer \" + response.data.token\n      localStorage.setItem('thisToken', token)\n      console.log(token)\n      window.location.replace(\"/homepage\")\n    })\n    .catch( (error) => {\n      console.log(error.message);\n      this.setState({validLogin: false})\n      \n    });\n   \n    \n}\n\nrender (){\n  let invalidLogin = null;\n  if(!this.state.validLogin){\n    invalidLogin = (\n      <p className=\"invalidLogin\">Invalid Username/Password</p>\n    )\n  }\n  \n  const formElementsArray = [];\n    for(let key in this.state.loginForm){\n      formElementsArray.push({\n        id: key,\n        config:this.state.loginForm[key]\n      })\n\n    }\n    return (\n\n     <div className=\"login\">\n    \n         <h1>Login</h1>\n     <form  id='myForm'\n            className=\"form\"\n              >\n    {formElementsArray.map(formElement =>(\n       <Input\n            key={formElement.id}\n            elementType = {formElement.config.elementType}\n            elementConfig = {formElement.config.elementConfig}\n            value = {formElement.config.value}\n            label = {formElement.config.label}\n            changed = {(event) => this.inputChangedHandler(event, formElement.id )}\n       />\n     ))}\n     {invalidLogin}\n     <Button variant=\"primary\" type=\"submit\" onClick={this.onSubmit}>\n       Submit\n     </Button>\n     \n   </form>\n   </div>\n    );\n    }\n}\n \n export default LoginForm;"]},"metadata":{},"sourceType":"module"}